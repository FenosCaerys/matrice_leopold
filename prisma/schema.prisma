// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modèle pour les projets
model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  activities  Activity[]
  components  EnvironmentalComponent[]
  impacts     Impact[]
}

// Modèle pour les activités du projet
model Activity {
  id          String   @id @default(uuid())
  name        String
  description String?
  phase       String   // préparation, construction, exploitation, maintenance
  projectId   String
  
  // Relations
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  impacts     Impact[]
}

// Modèle pour les composantes environnementales
model EnvironmentalComponent {
  id          String   @id @default(uuid())
  name        String
  description String?
  category    String   // physique, biologique, social, économique
  projectId   String
  
  // Relations
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  impacts     Impact[]
}

// Modèle pour les impacts
model Impact {
  id                      String   @id @default(uuid())
  magnitude               Int      // -10 à +10
  importance              Int      // 1 à 10
  description             String?
  mitigationMeasures      String?
  aiAnalysis              String?
  projectId               String
  activityId              String
  environmentalComponentId String
  
  // Relations
  project                 Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  activity                Activity @relation(fields: [activityId], references: [id], onDelete: Cascade)
  environmentalComponent  EnvironmentalComponent @relation(fields: [environmentalComponentId], references: [id], onDelete: Cascade)
}
